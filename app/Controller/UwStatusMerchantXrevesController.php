<?php
App::uses('AppController', 'Controller');
/**
 * UwStatusMerchantXreves Controller
 *
 * @property UwStatusMerchantXref $UwStatusMerchantXref
 * @property PaginatorComponent $Paginator
 */
class UwStatusMerchantXrevesController extends AppController {

/**
 * Components
 *
 * @var array
 */
	public $components = array('GUIbuilder');

/**
 * delete method
 *
 * @param string $id id
 * @throws MethodNotAllowedException
 * @throws NotFoundException
 * @return void
 */
	public function delete($id = null) {
		if (!$this->request->is('post')) {
			$this->_failure(__('ERROR 405: Request method not allowed.'), $this->referer());
		}
		$this->UwStatusMerchantXref->id = $id;
		if (!$this->UwStatusMerchantXref->exists()) {
			$this->_failure(__('Underwriting status entry not found'), $this->referer());
		}
		$data = $this->UwStatusMerchantXref->find('first', ['conditions' => ['id' => $id]]);

		if ($this->UwStatusMerchantXref->delete()) {
			$statusName = $this->UwStatusMerchantXref->UwStatus->field('name', ['id' => $data['UwStatusMerchantXref']['uw_status_id']]);
			if ($statusName === 'Approved') {
				$TimelineEntry = ClassRegistry::init('TimelineEntry');
				ClassRegistry::init('TimelineItem');
				$tEntryId = $TimelineEntry->field('id', ['merchant_id' => $data['UwStatusMerchantXref']['merchant_id'], 'timeline_item_id' => TimelineItem::APPROVED]);
				if ($tEntryId !== false) {
					$TimelineEntry->delete($tEntryId);
				}
			}
			$chNote = $this->GUIbuilder->setRequesDataNoteData($data['UwStatusMerchantXref']['merchant_id'], 'Change Request', 'Underwriting Change (Autogenerated note)');
			$chNote = $chNote[0];
			$chNote['note_date'] = date('Y-m-d H:i:s');
			$chNote['approved_by_user_id'] = $chNote['user_id']; //set user who triggered the note as the approver
			$chNote['note'] = "Underwriting Status entry deleted: \"$statusName {$data['UwStatusMerchantXref']['datetime']}\"";
			$this->UwStatusMerchantXref->Merchant->MerchantNote->save($chNote);
			$this->_success(__('Status entry deleted. This change has been noted in an autogenerated note.'), $this->referer(), array('class' => 'alert alert-success strong'));
		}
		$this->_failure(__('Failed to delete underwriting status entry, try again.'), $this->referer());
	}

}
